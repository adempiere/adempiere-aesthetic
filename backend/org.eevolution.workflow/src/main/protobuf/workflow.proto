/**
 * Copyright (C) 2003-2021, e-Evolution Consultants S.A. , http://www.e-evolution.com
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * Email: victor.perez@e-evolution.com, http://www.e-evolution.com , http://github.com/e-Evolution
 * Created by victor.perez@e-evolution.com , www.e-evolution.com
 */


syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.eevolution.context.workflow.infrastructure.service.grpc";

package workflow;


import "application_dictionary_data_type.proto";
import "google/protobuf/wrappers.proto";

/*
* Workflow Proto Message for Workflow domain model  
* Workflow or combination of tasks
* 
*/
message Workflow
{
		// Name -> Name : Alphanumeric identifier of the entity
		String                        				name  = 1;
		// Description -> Description : Optional short description of the record
		String                        				description  = 2;
		// Help -> Comment/Help : Comment or Hint
		String                        				help  = 3;
		// AD_Workflow_ID -> Workflow : Workflow or combination of tasks
		ID                            				workflow_id  = 4;
		// AD_Client_ID -> Client : Client/Tenant for this installation.
		TableDirect                   				client_id  = 5;
		// AD_Org_ID -> Organization : Organizational entity within client
		TableDirect                   				org_id  = 6;
		// IsActive -> Active : The record is active in the system
		YesNo                         				is_active  = 7;
		// Created -> Created : Date this record was created
		DateTime                      				created  = 8;
		// CreatedBy -> Created By : User who created this records
		Table                         				created_by  = 9;
		// Updated -> Updated : Date this record was updated
		DateTime                      				updated  = 10;
		// UpdatedBy -> Updated By : User who updated this records
		Table                         				updated_by  = 11;
		// AD_WF_Node_ID -> Node : Workflow Node (activity), step or process
		TableDirect                   				wf_node_id  = 12;
		// AccessLevel -> Data Access Level : Access Level required
		String                        				access_level  = 13;
		// EntityType -> Entity Type : Dictionary Entity Type; Determines ownership and synchronization
		String                        				entity_type  = 14;
		// Author -> Author : Author/Creator of the Entity
		String                        				author  = 15;
		// Priority -> Priority : Indicates if this request is of a high, medium or low priority.
		Integer                       				priority  = 16;
		// WorkingTime -> Working Time : Workflow Simulation Execution Time
		Integer                       				working_time  = 17;
		// Limit -> Duration Limit : Maximum Duration in Duration Unit
		Integer                       				limit  = 18;
		// ValidFrom -> Valid from : Valid from including this date (first day)
		Date                          				valid_from  = 19;
		// Duration -> Duration : Normal Duration in Duration Unit
		Integer                       				duration  = 20;
		// AD_WF_Responsible_ID -> Workflow Responsible : Responsible for Workflow Execution
		TableDirect                   				wf_responsible_id  = 21;
		// Version -> Version : Version of the table definition
		Integer                       				version  = 22;
		// Cost -> Cost : Cost information
		CostPrice                     				cost  = 23;
		// ValidTo -> Valid to : Valid to including this date (last day)
		Date                          				valid_to  = 24;
		// DurationUnit -> Duration Unit : Unit of Duration
		String                        				duration_unit  = 25;
		// WaitingTime -> Waiting Time : Workflow Simulation Waiting time
		Integer                       				waiting_time  = 26;
		// PublishStatus -> Publication Status : Status of Publication
		String                        				publish_status  = 27;
		// AD_WorkflowProcessor_ID -> Workflow Processor : Workflow Processor Server
		TableDirect                   				workflow_processor_id  = 28;
		// IsDefault -> Default : Default value
		YesNo                         				is_default  = 29;
		// ValidateWorkflow -> Validate Workflow : 
		String                        				validate_workflow  = 30;
		// AD_Table_ID -> Table : Database Table information
		Search                        				table_id  = 31;
		// Value -> Search Key : Search key for the record in the format required - must be unique
		String                        				value  = 32;
		// WorkflowType -> Workflow Type : Type of Workflow
		String                        				workflow_type  = 33;
		// DocValueLogic -> Document Value Logic : Logic to determine Workflow Start - If true, a workflow process is started for the document
		String                        				doc_value_logic  = 34;
		// IsValid -> Valid : Element is valid
		YesNo                         				is_valid  = 35;
		// S_Resource_ID -> Resource : Resource
		TableDirect                   				resource_id  = 36;
		// SetupTime -> Setup Time : Setup time before starting Production
		Integer                       				setup_time  = 37;
		// MovingTime -> Moving Time : 
		Integer                       				moving_time  = 38;
		// ProcessType -> Process Type : 
		String                        				process_type  = 39;
		// DocumentNo -> Document No : Document sequence number of the document
		String                        				document_no  = 40;
		// QtyBatchSize -> Qty Batch Size : 
		Quantity                      				qty_batch_size  = 41;
		// QueuingTime -> Queuing Time : Queue time is the time a job waits at a work center before begin handled.
		Integer                       				queuing_time  = 42;
		// IsBetaFunctionality -> Beta Functionality : This functionality is considered Beta
		YesNo                         				is_beta_functionality  = 43;
		// Yield -> Yield % : The Yield is the percentage of a lot that is expected to be of acceptable wuality may fall below 100 percent
		Integer                       				yield  = 44;
		// UnitsCycles -> Units by Cycles : The Units by Cycles are defined for process type  Flow Repetitive Dedicated and  indicated the product to be manufactured on a production line for duration unit.
		Number                        				units_cycles  = 45;
		// OverlapUnits -> Overlap Units : Overlap Units are number of units that must be completed before they are moved the next activity
		Number                        				overlap_units  = 46;
		// UUID -> Immutable Universally Unique Identifier : Immutable Universally Unique Identifier
		String                        				uuid  = 47;
}


// Proto Message Request for Name 
message WorkflowByNameRequest{
	String                         name = 1;
}

// Proto Message Request for Description 
message WorkflowByDescriptionRequest{
	String                         description = 1;
}

// Proto Message Request for AD_Workflow_ID 
message WorkflowByWorkflowIdRequest{
	ID                             workflow_id = 1;
}

// Proto Message Request for Value 
message WorkflowByValueRequest{
	String                         value = 1;
}

// Proto Message Request for DocumentNo 
message WorkflowByDocumentNoRequest{
	String                         document_no = 1;
}

// Proto Message Request for All Request 
message WorkflowAllRequest 
{
}

// Proto Message Request for All By Client Id Request    
message WorkflowAllByClientIdRequest{
  TableDirect tenant_id = 1;
} 
    
// Proto Message Save Request for Workflow
message WorkflowSaveRequest{
  Workflow workflow = 1 ;
}
    
// Proto Message Response for Workflow
message WorkflowResponse
{
   Workflow workflow = 1;
}
 
// Proto Message Response for Workflow Stream   
message WorkflowStreamResponse{
  repeated Workflow workflow = 1;
} 
    
// Proto Service for Workflow Domain Model
service WorkflowService {

    rpc GetWorkflowByName(WorkflowByNameRequest) returns (WorkflowResponse) {}

    rpc GetWorkflowByDescription(WorkflowByDescriptionRequest) returns (stream WorkflowStreamResponse) {}

    rpc GetWorkflowByWorkflowId(WorkflowByWorkflowIdRequest) returns (WorkflowResponse) {}

    rpc GetWorkflowByValue(WorkflowByValueRequest) returns (WorkflowResponse) {}

    rpc GetWorkflowByDocumentNo(WorkflowByDocumentNoRequest) returns (stream WorkflowStreamResponse) {}

    rpc GetWorkflowAll(WorkflowAllRequest) returns (stream WorkflowStreamResponse) {}
    
    rpc GetWorkflowAllByClientId(WorkflowAllByClientIdRequest) returns (stream WorkflowStreamResponse) {}
    
    rpc save(WorkflowSaveRequest) returns (WorkflowResponse) {}
    
}